<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Todo.Views.MainPage"
             xmlns:viewmodels="clr-namespace:Todo.ViewModels"
             xmlns:views="clr-namespace:Todo.Views"
             Padding="0,20,0,0">
    <ContentPage.Resources>
        <ResourceDictionary>
            <views:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ScrollView 
        HorizontalScrollBarVisibility="Never" 
        VerticalScrollBarVisibility="Always">
        <VerticalStackLayout
            Padding="30,0"
            Spacing="25">
            <Grid ColumnDefinitions="*,Auto"
                  RowDefinitions="Auto,20"
                  ColumnSpacing="10">
                <Entry Grid.Column="0"
                       VerticalOptions="Center"
                       Placeholder="Neues ToDo..."
                       AutomationId="NewTodoName"
                       Text="{Binding NewToDoName}"/>
                <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" TextColor="Red"
                       Text="{Binding ValidationErrorMessage}"
                       IsVisible="{Binding HasValidationError}"/>
                <Button Grid.Column="1"
                        HorizontalOptions="Start" 
                        VerticalOptions="Center" 
                        AutomationId="AddTodoButton" 
                        Text="Neu"
                        IsEnabled="{Binding HasValidationError, Converter={StaticResource InverseBooleanConverter}}"
                        Command="{Binding AddTodoCommand}" />
            </Grid>
            <ListView AutomationId="ToDoListView" ItemsSource="{Binding Todos}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <SwipeView>
                                <SwipeView.LeftItems>
                                    <SwipeItems Mode="Execute">
                                        <SwipeItem Text="Delete"
                                                   BackgroundColor="Red"
                                                   Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:MainPageViewModel}}, Path=DeleteTodoCommand}"
                                                   CommandParameter="{Binding .}"/>
                                    </SwipeItems>
                                </SwipeView.LeftItems>
                                <SwipeView.RightItems>
                                    <SwipeItems Mode="Execute">
                                        <SwipeItem Text="Done"
                                                   BackgroundColor="Green"
                                                   Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:MainPageViewModel}}, Path=CompleteTodoCommand}"
                                                   CommandParameter="{Binding .}"/>
                                    </SwipeItems>
                                </SwipeView.RightItems>
                                <StackLayout Orientation="Horizontal" AutomationId="{Binding Id}">
                                    <CheckBox AutomationId="{Binding Path=Id, StringFormat='{0}checkbox'}" 
                                              IsEnabled="{Binding IsCompleted, Converter={StaticResource InverseBooleanConverter}}"
                                              IsChecked="{Binding IsCompleted}" 
                                              CheckedChanged="OnCheckBoxCheckedChanged" />
                                    <Label Text="{Binding Title}" 
                                           VerticalOptions="Center"
                                           IsEnabled="{Binding IsCompleted, Converter={StaticResource InverseBooleanConverter}}"
                                           AutomationId="{Binding Id, StringFormat='{0}titlelabel'}">
                                        <Label.GestureRecognizers>
                                            <TapGestureRecognizer NumberOfTapsRequired="2" Tapped="OnTitleLabelTapped"/>
                                        </Label.GestureRecognizers>
                                    </Label>
                                    <Entry Text="{Binding Title}" 
                                           x:Name="{Binding Id, StringFormat='{0}titleentry'}"
                                           VerticalOptions="Center"
                                           AutomationId="{Binding Id, StringFormat='{0}titleentry'}"
                                           ReturnType="Done"
                                           IsVisible="false"
                                           Completed="OnTitleEntryCompleted"
                                           Unfocused="OnTitleEntryFocusLost"/>
                                </StackLayout>
                            </SwipeView>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </VerticalStackLayout>
    </ScrollView>
</ContentPage>